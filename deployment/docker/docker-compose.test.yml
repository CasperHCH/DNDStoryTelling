services:
  # Main application service - Comprehensive test configuration
  web:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile
    ports:
      - "8001:8000"  # Different port to avoid conflicts
    environment:
      - ENVIRONMENT=test
      - DEBUG=false
      - DATABASE_URL=postgresql+asyncpg://user:testpassword123@db:5432/dndstory_test
      - SECRET_KEY=test-secret-key-for-docker-testing-that-is-long-enough-for-validation-123456
      - OPENAI_API_KEY=test-key-not-real
      - CONFLUENCE_API_TOKEN=test-token-not-real
      - CONFLUENCE_URL=https://test.atlassian.net
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - CORS_ORIGINS=http://localhost:8001,http://127.0.0.1:8001
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - uploads:/app/uploads
    working_dir: /app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Test runner service with isolated environment
  test:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile.test
    environment:
      - ENVIRONMENT=test
      - DEBUG=true
      - DATABASE_URL=postgresql+asyncpg://test_user:test_password@test_db:5432/dndstory_test
      - SECRET_KEY=test-secret-key-for-testing-that-is-long-enough-for-validation
      - OPENAI_API_KEY=test-fake-openai-key-for-testing
      - CONFLUENCE_API_TOKEN=test-fake-confluence-token
      - CONFLUENCE_URL=https://test.atlassian.net
      - CONFLUENCE_PARENT_PAGE_ID=123456789
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - ALLOWED_HOSTS=localhost,127.0.0.1,testserver
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8000,http://testserver
      - APP_NAME=D&D Story Telling (Test)
      - VERSION=1.0.0-test
      - MAX_FILE_SIZE=10485760
      - UPLOAD_DIR=test_uploads
      - SUPPORTED_AUDIO_FORMATS=mp3,wav,m4a,ogg,flac
      - RATE_LIMIT_REQUESTS=1000
      - RATE_LIMIT_WINDOW=3600
      - PYTHONPATH=/app
    depends_on:
      test_db:
        condition: service_healthy
    volumes:
      - .:/app
      - test_uploads:/app/test_uploads
    working_dir: /app
    profiles: ["test"]

  # Test database
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=testpassword123
      - POSTGRES_DB=dndstory_test
      - LANG=en_US.utf8
      - LC_ALL=en_US.utf8
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d dndstory_test"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    restart: unless-stopped

  # Test database (isolated from production)
  test_db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
      - POSTGRES_DB=dndstory_test
      - LANG=en_US.utf8
      - LC_ALL=en_US.utf8
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d dndstory_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    profiles: ["test"]

volumes:
  postgres_data:
  postgres_test_data:
  app_temp:
  app_uploads:
  uploads:
  test_uploads: