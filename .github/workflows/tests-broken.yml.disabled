name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Required permissions for coverage comment action
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: dndstory_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Check if test-requirements.txt exists, otherwise use testing/test-requirements.txt
        if [ -f test-requirements.txt ]; then
          pip install -r test-requirements.txt
        elif [ -f testing/test-requirements.txt ]; then
          pip install -r testing/test-requirements.txt
        fi

    - name: Fix Pydantic version
      run: |
        # Ensure Pydantic v2 is maintained (prevent downgrade by conflicting dependencies)
        pip install --force-reinstall "pydantic>=2.4.2"

    - name: Run tests
      env:
        ENVIRONMENT: test
        DATABASE_URL: postgresql+asyncpg://user:password@localhost:5432/dndstory_test
        SECRET_KEY: test_secret_key_that_is_long_enough_for_validation_requirements_12345
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
        CONFLUENCE_URL: ${{ secrets.CONFLUENCE_URL }}
      run: |
        python -m pytest testing/tests/ --cov=app --cov-report=xml --cov-report=html --ignore=testing/tests/ui/ -v

    - name: Upload coverage reports as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          ./coverage.xml
          ./htmlcov/
        retention-days: 30

    - name: Coverage comment
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}