name: "CI/CD Pipeline"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  PYTHONPATH: ${{ github.workspace }}
  PYTHONUNBUFFERED: 1

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        cache-dependency-path: '**/requirements*.txt'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg libpq-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        pip install -r test-requirements.txt || echo "No test-requirements.txt found"

    - name: Run linting
      run: |
        python -m flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
        python -m flake8 app/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run type checking
      run: |
        python -m mypy app/ --ignore-missing-imports || echo "Type checking completed with warnings"

    - name: Run tests
      env:
        ENVIRONMENT: test
        DATABASE_URL: sqlite:///./test.db
        SECRET_KEY: test-secret-key-for-github-actions-32-chars
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key' }}
        CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN || 'test-token' }}
        CONFLUENCE_URL: ${{ secrets.CONFLUENCE_URL || 'https://test.atlassian.net' }}
      run: |
        python -m pytest testing/tests/ -v --cov=app --cov-report=xml --cov-report=html --cov-report=term-missing --ignore=testing/tests/ui/

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

    - name: Upload coverage artifacts
      uses: actions/upload-artifact@v3
      if: matrix.python-version == '3.11'
      with:
        name: coverage-report
        path: htmlcov/